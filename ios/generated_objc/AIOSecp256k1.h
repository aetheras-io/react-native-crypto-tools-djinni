// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from secp256k1.djinni

#import <Foundation/Foundation.h>
@class AIOSecp256k1;


/**Bitcoin secp256k1 library interface */
@interface AIOSecp256k1 : NSObject

/**
 * Create an instance of Secp256k1
 * @return Secp256k1 instance
 */
+ (nullable AIOSecp256k1 *)createInstance;

+ (nullable AIOSecp256k1 *)newInstance;

/**
 * Generates public key from private key.
 * @param privKey 32 byte private key
 * @param compress get compressed (35 bytes) or uncompressed (65 bytes)
 * @return public key can be compressed (35 bytes starting with 02 or 03) or uncompressed (65 bytes starting with 04)
 */
- (nonnull NSData *)computePubKey:(nonnull NSData *)privKey
                         compress:(BOOL)compress;

/**
 * Generates uncompressed public key from compressed public key.
 * @param pubKey 33 byte private key (starting with 02 or 03)
 * @return uncompressed public key (65 bytes starting with 04)
 */
- (nonnull NSData *)computeUncompressedPubKey:(nonnull NSData *)pubKey;

/**
 * Signs message using a given private key
 * @param privKey 32 bytes private key
 * @param data 32 bytes message to sign
 * @return 32 bytes signed message
 */
- (nonnull NSData *)sign:(nonnull NSData *)privKey
                    data:(nonnull NSData *)data;

/**
 * Check if message was signed with given signature and public key
 * @param data 32 bytes signed message
 * @param signature 32 bytes signature (generated from private key)
 * @param oubkey 32 bytes public key
 * @return true if message was signed with signature and public key (both issued from same private key)
 */
- (BOOL)verify:(nonnull NSData *)data
     signature:(nonnull NSData *)signature
        pubKey:(nonnull NSData *)pubKey;

@end
